name: Reusable Nype Deploy CI

on:
  workflow_call:
    secrets:
      INPUT_ENV: {}
      SSH_PRIVATE_KEY:
        required: true
      SSH_HOST:
        required: true
      SSH_PORT:
        required: true
      SSH_USER:
        required: true
      SSH_TARGET:
        required: true
      SSH_COMMAND:
        required: true

env:
  CI: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set input env
        run: |
          echo '
          ${{ secrets.INPUT_ENV }}
          ' >> $GITHUB_ENV
      - name: Checkout Caller Repo
        uses: actions/checkout@v4
      - name: Checkout mkdocs-nype repo
        run: git clone --depth 1 https://github.com/nypesap/mkdocs-nype.git
      - name: Configure Git Credentials
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
      - name: Install Python
        id: install-python
        uses: actions/setup-python@v5
        with:
          python-version: 3
          cache: pip
      - name: Process Python Cache
        id: cache-requirements
        uses: actions/cache@v4
        with:
          path: venv
          key: requirements-${{ steps.install-python.outputs.python-version }}-${{ hashFiles('mkdocs-nype/requirements*.txt', 'mkdocs-nype/mkdocs_nype/**') }}
          restore-keys: |
            requirements-${{ steps.install-python.outputs.python-version }}
      - name: Install Uncached Requirements
        if: steps.cache-requirements.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install mkdocs-nype/
      - name: Create dummy cache file
        run: mkdir -p .cache; echo mkdocs-material > .cache/safe
      - name: Process Material for MkDocs Cache
        uses: actions/cache@v4
        with:
          key: mkdocs-material-${{ hashfiles('.cache/**') }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - name: Run theme pre-build scripts
        run: venv/bin/python -m mkdocs_nype --minify --inject-minified
      - name: Build site
        run: venv/bin/python -m mkdocs build --strict
      - name: Prepare deploy archive
        run: |
          zip -r site.zip site/
          sha256sum site.zip > checksum
          sha256sum -c checksum
          mkdir -p deploy
          zip deploy/deploy.zip site.zip checksum
      - name: Deploy files via rsync and SSH
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: deploy/
          remote_host: ${{ secrets.SSH_HOST }}
          remote_port: ${{ secrets.SSH_PORT }}
          remote_user: ${{ secrets.SSH_USER }}
          target: ${{ secrets.SSH_TARGET }}
          script_after_required: true
          script_after: |
            export SSH_TARGET=${{ secrets.SSH_TARGET }}
            ${{ secrets.SSH_COMMAND }}
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site
      - name: Deploy backup to GitHub Pages
        uses: actions/deploy-pages@v4